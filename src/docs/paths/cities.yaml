paths:
  /cities:
    post:
      summary: Créer une nouvelle ville
      description: Ajoute une nouvelle ville à la base de données. Les noms de villes doivent être uniques et respecter les contraintes de validation.
      tags:
        - Cities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Paris
                code:
                  type: string
                  example: PAR
                country:
                  type: string
                  example: FR
              required:
                - name
                - code
                - country
      responses:
        '201':
          description: Ville créée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: City created
                  city:
                    $ref: '#/components/schemas/City'
        '400':
          description: Erreur de validation ou ville déjà existante.
        '409':
          description: Conflit. Une ville avec le même code existe déjà.
        '500':
          description: Erreur interne du serveur.

    get:
      summary: Récupérer toutes les villes
      description: Retourne une liste de toutes les villes disponibles dans la base de données, avec filtres, tri et pagination.
      tags:
        - Cities
      parameters:
        - name: name
          in: query
          description: Filtrer par nom exact de ville
          schema:
            type: string
        - name: countryCode
          in: query
          description: Filtrer par code pays (ISO 3166-1 alpha-2)
          schema:
            type: string
            example: FR
        - name: countryName
          in: query
          description: Filtrer par nom de pays
          schema:
            type: string
        - name: continent
          in: query
          description: Filtrer par code continent
          schema:
            type: string
            example: EU
        - name: continentName
          in: query
          description: Filtrer par nom de continent
          schema:
            type: string
        - name: q
          in: query
          description: Recherche textuelle (ville, région administrative ou pays)
          schema:
            type: string
        - name: sortBy
          in: query
          description: Champ de tri
          schema:
            type: string
            enum: [createdAt, name, population, countryCode]
            default: createdAt
        - name: sortOrder
          in: query
          description: Ordre de tri
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: page
          in: query
          description: Numéro de page (à partir de 1)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Nombre d'éléments par page (max 100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Liste des villes récupérée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      $ref: '#/components/schemas/City'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '500':
          description: Erreur interne du serveur.


  /cities/search:
    get:
      summary: Recherche de villes (plein texte)
      description: Retourne une liste de villes correspondant au mot-clé fourni, classées par pertinence. La réponse peut inclure un score de pertinence et un extrait contextuel.
      tags:
        - Cities
      parameters:
        - name: keyword
          in: query
          required: true
          description: Mot-clé de recherche (ex. "Paris", "Douala")
          schema:
            type: string
      responses:
        '200':
          description: Résultats de la recherche récupérés avec succès.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CitySearchResult'
        '500':
          description: Erreur interne du serveur.


  /cities/{id}:
    get:
      summary: Récupérer une ville par ID
      description: Retourne les détails d'une ville spécifique en fonction de son ID.
      tags:
        - Cities
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la ville.
      responses:
        '200':
          description: Ville récupérée avec succès.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '404':
          description: Ville non trouvée.
        '500':
          description: Erreur interne du serveur.

    put:
      summary: Mettre à jour une ville
      description: Met à jour les informations d'une ville existante. Les champs modifiés doivent respecter les contraintes de validation.
      tags:
        - Cities
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la ville.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Paris
                code:
                  type: string
                  example: PAR
                country:
                  type: string
                  example: FR
      responses:
        '200':
          description: Ville mise à jour avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: City updated
                  city:
                    $ref: '#/components/schemas/City'
        '404':
          description: Ville non trouvée.
        '400':
          description: Erreur de validation.
        '500':
          description: Erreur interne du serveur.

    delete:
      summary: Supprimer une ville
      description: Supprime une ville existante en fonction de son ID.
      tags:
        - Cities
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la ville.
      responses:
        '200':
          description: Ville supprimée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: City deleted
        '404':
          description: Ville non trouvée.
        '500':
          description: Erreur interne du serveur.

components:
  schemas:
    City:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Paris
        code:
          type: string
          example: PAR
        country:
          type: string
          example: FR
        createdAt:
          type: string
          format: date-time
          example: 2025-05-04T12:34:56Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-05-04T12:34:56Z

    CitySearchResult:
      description: Résultat de recherche pour une ville, incluant des métadonnées de pertinence.
      allOf:
        - $ref: '#/components/schemas/City'
        - type: object
          properties:
            rank:
              type: number
              format: float
              description: Score de pertinence de la recherche.
              example: 0.42
            excerpt:
              type: string
              description: Extrait textuel avec mise en évidence des correspondances.
              example: "France — <b>Paris</b> est la capitale..."

    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: Nombre total d'éléments correspondant au filtre
        page:
          type: integer
          description: Numéro de la page courante
        limit:
          type: integer
          description: Nombre d'éléments par page
        totalPages:
          type: integer
          description: Nombre total de pages

securitySchemes:
  cookieAuth:
    type: apiKey
    in: cookie
    name: session
